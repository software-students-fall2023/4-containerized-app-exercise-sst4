# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Web App Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Generate Report
        run: |
          find . -name "*.pyc" -exec rm -f {} \;
          pip install pytest-cov
          pytest --cov-config=.coveragerc --cov=./web_app/tests --cov-report=xml
          python -m coverage run -m pytest
          python -m coverage report

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Web-App Docker Image
        run: |
          docker build -f web_app/Dockerfile -t vitarose/web_app:latest ./web_app
          docker push vitarose/web_app:latest

      - name: Build and Push Machine Learning Client Docker Image
        run: |
          docker build -f machine_learning_client/Dockerfile -t vitarose/machine_learning_client:latest ./machine_learning_client
          docker push vitarose/machine_learning_client:latest

      - name: Build and Push MongoDB Docker Image
        run: |
          docker build -f mongodb/Dockerfile -t vitarose/mongodb:latest ./mongodb
          docker push vitarose/mongodb:latest

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_DROPLET_IP }}
          username: ${{ secrets.DIGITALOCEAN_DROPLET_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            mkdir application
            cd application
            docker-compose pull
            docker-compose down
            docker-compose up -d
